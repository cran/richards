
R version 2.6.0 RC (2007-09-28 r43016)
Copyright (C) 2007 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library(richards)
> 
> library(nlme)
> 
> data(ChickWeight)
> 
> ChickWeight <- cbind(ChickWeight, ExpTime = exp(ChickWeight[,"Time"]))
> 
> groupedChicks <- groupedData(weight ~ ExpTime | Diet / Chick, 
+                              inner = ~ PR, data = ChickWeight)
> 
> listChicks <- split(groupedChicks, list(groupedChicks[,"Diet"],
+                                         groupedChicks[,"Chick"]),
+                     drop = TRUE)
> 
> fit.Richards.BP <- function(X, start, lower, upper)
+  {
+   try(nls(weight ~ SSrichards(ExpTime, a, d, b, x50, ny),
+           lower = lower, upper = upper, algorithm = "port",
+           control = nls.control(warnOnly = TRUE), data = X))
+  }
> 
> fit.Fpl.BP <- function(X, start, lower, upper)
+  {
+   try(nls(weight ~ SSny1(ExpTime, a, d, b, x50),
+           lower = lower, upper = upper, algorithm = "port",
+           control = nls.control(warnOnly = TRUE), data = X))
+  }
> 
> fit.Fpl.D <- function(X, start, lower, upper)
+  {
+   try(nls(weight ~ SSny1(ExpTime, a, d, b, x50),
+           control = nls.control(warnOnly = TRUE), data = X))
+  }
> 
> Start <- list(a =    25, d =  200, b =  10, x50 =    10, ny =  1)
> Lower <- list(a = -2000, d =    5, b =   0, x50 =     1, ny =  0.01)
> Upper <- list(a =    50, d = 1500, b =  50, x50 = 10^20, ny = 128)
> 
> myApplyFUN2X <- 
+   function(X, FUN, start = Start, lower = Lower, upper = Upper,
+               Report = print, ...) {
+     if (dim(X)[1] > 0) {
+       result <- FUN(X, start, lower, upper)
+       # if (is.null(result) | class(result) == "try-error")
+       #  Report(X)
+       return(result)
+     }
+   }
> 
> fits.Richards.BP <- fitList(listChicks, FUN = fit.Richards.BP,
+                             applyFUN2X = myApplyFUN2X, n = 5)
               a         d          b          x50        ny
1.18          NA        NA         NA           NA        NA
1.16   35.846844  53.73499 0.32600707 7.850212e+00 0.0100000
1.15   30.090279  67.86196 0.31157313 8.859566e+00 0.0100000
1.13          NA        NA         NA           NA        NA
1.9    39.090152  97.01260 0.45706785 2.403671e+02 0.9614769
1.20   17.332596 141.69995 0.09590108 1.369975e+05 0.0100000
1.10  -57.898014 217.80694 0.06679558 2.332438e+04 1.3242382
1.8    19.596502 130.09253 0.16134495 8.140114e+02 0.0100000
1.17          NA        NA         NA           NA        NA
1.19          NA        NA         NA           NA        NA
1.4    33.205515 166.31083 0.17163653 1.378626e+05 0.0100000
1.6    37.302418 159.30008 0.38650867 2.974666e+03 0.8329218
1.11   31.717743 180.45320 0.28445744 2.184265e+03 0.0100000
1.3    21.326255 212.54351 0.16367714 1.460231e+05 0.0100000
1.1    25.582402 264.42546 0.13720676 6.622163e+06 0.0100000
1.12   37.569115 217.96912 0.24180708 5.378570e+05 0.5726666
1.2     5.586864 267.86246 0.11679568 8.012829e+05 0.0100000
1.5    38.853146 245.10926 0.44204182 1.968553e+05 2.4392976
1.14   22.013084 270.01648 0.20114188 6.417423e+04 0.1680829
1.7    29.356629 503.46178 0.22113609 1.442228e+08 2.3197333
2.24          NA        NA         NA           NA        NA
2.30   16.401279 156.42614 0.14898405 4.275395e+03 0.0100000
2.22          NA        NA         NA           NA        NA
2.23   34.106523 233.21055 0.31886170 8.543999e+05 4.2930113
2.27          NA        NA         NA           NA        NA
2.28   29.286608 353.76144 0.30998638 2.030844e+07 4.9623111
2.26          NA        NA         NA           NA        NA
2.25  -13.970643 346.43689 0.10859707 8.582253e+05 0.0100000
2.29          NA        NA         NA           NA        NA
2.21   36.187336 398.81332 0.43745896 2.502678e+05 3.7996934
3.33   22.553774 150.44371 0.21509625 1.163104e+03 0.0100000
3.37   14.140235 241.64369 0.10876261 4.269604e+06 0.0100000
3.36   23.368084 228.02803 0.19122723 4.091808e+04 0.0100000
3.31    5.975527 968.32359 0.09597718 7.996169e+12 0.0100000
3.39          NA        NA         NA           NA        NA
3.38    8.922099 610.91759 0.11587982 2.392455e+09 0.0100000
3.32   -4.019613 383.05650 0.12425950 1.341279e+06 0.0100000
3.40    6.258376 511.90614 0.12870922 7.090818e+07 0.3122923
3.34    6.466256 432.16515 0.14001137 3.415162e+06 0.0100000
3.35   14.769614 439.84400 0.20482770 5.863575e+05 0.8491637
4.44   36.781228 159.58226 0.56246460 1.652788e+03 3.6176832
4.45 -299.621222 633.03566 0.03065039 2.524605e+07 0.6670479
4.43   33.322270 199.61505 0.37168015 1.372298e+03 0.7548340
4.41   35.510570 275.22214 0.49334816 6.463699e+05 7.4504356
4.47   32.541959 322.87577 0.39937144 1.417427e+07 7.7632903
4.49  -53.562014 415.34431 0.10136675 4.491803e+06 1.4693056
4.46  -76.019272 490.30510 0.06402398 8.211172e+07 0.1873770
4.50   -1.323218 306.59392 0.12522674 1.859404e+05 0.0100000
4.42  -21.924287 518.20502 0.10895847 1.451150e+08 0.9283716
4.48   -9.829406 563.87302 0.10885402 1.587939e+08 0.0100000
> fits.Fpl.BP      <- fitList(listChicks, FUN = fit.Fpl.BP,
+                             applyFUN2X = myApplyFUN2X, n = 4)
               a          d          b          x50
1.18          NA         NA         NA           NA
1.16   38.960301   53.84044 0.63828145 1.573227e+01
1.15   36.902954   68.20245 0.59970862 1.992847e+01
1.13          NA         NA         NA           NA
1.9    39.188922   97.05618 0.46297544 2.420189e+02
1.20   18.921690  178.02746 0.10846708 1.190917e+07
1.10  -68.087370  212.74166 0.05957506 3.791027e+03
1.8    31.307282  135.40478 0.25766473 2.799757e+03
1.17          NA         NA         NA           NA
1.19          NA         NA         NA           NA
1.4    34.930084  189.81032 0.20338180 6.286799e+05
1.6    38.387191  159.72460 0.41336419 3.102027e+03
1.11   41.965532  182.48120 0.46578390 2.825058e+03
1.3    26.779034  242.46039 0.20476756 6.792144e+05
1.1    27.453206  348.97120 0.14986614 2.637545e+08
1.12   39.178993  226.74286 0.26552610 7.909024e+05
1.2    10.637122  339.29972 0.13489778 2.656325e+07
1.5    34.723132  229.31701 0.32885583 1.159657e+05
1.14   30.939082  287.82262 0.26125784 1.307764e+05
1.7    26.022269  414.07159 0.19709350 1.179180e+07
2.24          NA         NA         NA           NA
2.30   27.404010  166.62686 0.22016107 1.594776e+04
2.22          NA         NA         NA           NA
2.23   19.055550  196.93928 0.18063766 3.196580e+04
2.27          NA         NA         NA           NA
2.28   14.781155  268.66105 0.18815386 2.236964e+05
2.26          NA         NA         NA           NA
2.25   -7.269684  449.08012 0.12463850 4.287551e+07
2.29          NA         NA         NA           NA
2.21   20.102728  349.12687 0.26270236 5.852239e+04
3.33   34.567887  153.37520 0.35370698 2.196175e+03
3.37   14.155168  340.13299 0.11401513 1.040574e+09
3.36   31.282817  245.77034 0.25876838 8.980607e+04
3.31  -17.318078 1500.00000 0.08079407 2.623664e+17
3.39          NA         NA         NA           NA
3.38    8.177243 1036.59362 0.11591549 4.586153e+12
3.32    1.479911  497.30470 0.14059205 4.427357e+07
3.40    8.655937  626.97218 0.13581181 1.213103e+09
3.34    8.484868  585.07041 0.15108998 1.323691e+08
3.35   16.144917  447.99655 0.21084897 7.180021e+05
4.44   22.040490  151.03307 0.28146956 5.200087e+02
4.45 -295.440874  709.27153 0.03180003 3.923906e+09
4.43   35.944284  200.34692 0.41280446 1.476485e+03
4.41    1.986624  224.49792 0.17838188 7.192134e+03
4.47   -3.382663  246.24551 0.15454970 2.415543e+04
4.49  -70.688105  406.41333 0.08706893 1.315245e+06
4.46  -68.626327  638.19171 0.07005455 4.835356e+10
4.50    7.494713  371.73336 0.15161847 2.713716e+06
4.42  -23.803660  541.33317 0.10714138 2.946687e+08
4.48   -9.429476  876.14263 0.11189710 1.177945e+11
> fits.Fpl.D       <- fitList(listChicks, FUN = fit.Fpl.D,
+                             applyFUN2X = myApplyFUN2X, n = 4)
               a          d          b          x50
1.18          NA         NA         NA           NA
1.16   38.960210   53.84046 0.63827222 1.573198e+01
1.15   36.902934   68.20245 0.59970754 1.992843e+01
1.13          NA         NA         NA           NA
1.9    39.188804   97.05619 0.46297303 2.420162e+02
1.20   18.921666  178.02749 0.10846703 1.190917e+07
1.10  -68.085093  212.74026 0.05957585 3.791437e+03
1.8    31.307257  135.40480 0.25766452 2.799757e+03
1.17          NA         NA         NA           NA
1.19          NA         NA         NA           NA
1.4    34.930027  189.81054 0.20338132 6.286882e+05
1.6    38.387188  159.72460 0.41336415 3.102027e+03
1.11   41.965519  182.48121 0.46578359 2.825059e+03
1.3    26.778938  242.46070 0.20476705 6.792223e+05
1.1    27.453206  348.97120 0.14986614 2.637545e+08
1.12   39.178980  226.74288 0.26552601 7.909029e+05
1.2    10.637114  339.29973 0.13489777 2.656325e+07
1.5    34.723106  229.31705 0.32885560 1.159657e+05
1.14   30.939033  287.82268 0.26125762 1.307765e+05
1.7    26.022271  414.07157 0.19709351 1.179180e+07
2.24          NA         NA         NA           NA
2.30   27.404055  166.62681 0.22016131 1.594776e+04
2.22          NA         NA         NA           NA
2.23   19.055568  196.93925 0.18063773 3.196577e+04
2.27          NA         NA         NA           NA
2.28   14.781179  268.66099 0.18815394 2.236960e+05
2.26          NA         NA         NA           NA
2.25   -7.269687  449.08012 0.12463850 4.287551e+07
2.29          NA         NA         NA           NA
2.21   20.102775  349.12683 0.26270250 5.852241e+04
3.33   34.567914  153.37516 0.35370756 2.196171e+03
3.37   14.155123  340.13302 0.11401508 1.040574e+09
3.36   31.282792  245.77040 0.25876820 8.980623e+04
3.31    5.584806 1814.09283 0.09562092 2.623664e+17
3.39          NA         NA         NA           NA
3.38    8.177231 1036.59358 0.11591548 4.586153e+12
3.32    1.479912  497.30470 0.14059205 4.427357e+07
3.40    8.655936  626.97218 0.13581181 1.213103e+09
3.34    8.484897  585.07039 0.15109001 1.323691e+08
3.35   16.144960  447.99646 0.21084907 7.180010e+05
4.44   22.040479  151.03307 0.28146952 5.200084e+02
4.45 -295.444510  709.27512 0.03179979 3.923906e+09
4.43   35.944284  200.34692 0.41280446 1.476485e+03
4.41    1.986573  224.49798 0.17838176 7.192137e+03
4.47   -3.382606  246.24544 0.15454981 2.415541e+04
4.49  -70.687981  406.41293 0.08706903 1.315227e+06
4.46  -68.626286  638.19168 0.07005456 4.835356e+10
4.50    7.494742  371.73323 0.15161854 2.713705e+06
4.42  -23.803685  541.33319 0.10714137 2.946687e+08
4.48   -9.429482  876.14263 0.11189710 1.177945e+11
> 
